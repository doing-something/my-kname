{"ast":null,"code":"import _slicedToArray from \"/home/skyparci/work/project/your-kname/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/skyparci/work/project/your-kname/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/skyparci/work/project/your-kname/src/components/TextField/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useReducer } from 'react';\nimport PropTypes from 'prop-types'; // styles\n\nimport { TextFieldWrap, TextFieldContainer, TextFieldLabel, TextFieldLabelSpan, TextFieldInput, SVG, TextFieldError } from './styles';\nimport compareProperties from 'utils/compareProperties'; // constants\n\nconst UPDATE_INPUT_VALUE = 'UPDATE_INPUT_VALUE';\n\nfunction reducer(state, {\n  type,\n  value\n}) {\n  switch (type) {\n    case UPDATE_INPUT_VALUE:\n      return _objectSpread({}, state, {\n        inputValue: value\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst TextField = memo(({\n  title,\n  name,\n  type,\n  placeholder,\n  disabled,\n  autoComplete,\n  onChange,\n  onBlur,\n  onFocus,\n  required,\n  error\n}) => {\n  const _useReducer = useReducer(reducer, {\n    inputValue: ''\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const handleChange = e => {\n    e.persist();\n    const value = e.target.value;\n    dispatch({\n      type: UPDATE_INPUT_VALUE,\n      value\n    });\n    e.preventDefault();\n    onChange(e);\n  };\n\n  const handleBlur = e => {\n    onBlur(e);\n  };\n\n  return React.createElement(TextFieldWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TextFieldContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TextFieldInput, {\n    id: name,\n    name: name,\n    type: type,\n    placeholder: placeholder,\n    disabled: disabled,\n    required: required,\n    autoComplete: autoComplete,\n    value: state.inputValue,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onFocus: onFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(TextFieldLabel, {\n    value: state.inputValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TextFieldLabelSpan, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, title || name)), React.createElement(SVG, {\n    width: \"300%\",\n    value: state.inputValue,\n    height: \"100%\",\n    viewBox: \"0 0 1200 60\",\n    preserveAspectRatio: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), error && React.createElement(TextFieldError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, error));\n}, (prevProps, nextProps) => compareProperties()(['error', 'disabled']));\nexport default TextField;\nTextField.prototype = {\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  autoComplete: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func\n};\nTextField.defaultProps = {\n  title: '',\n  error: '',\n  type: 'text',\n  placeholder: '',\n  disabled: false,\n  required: false,\n  autoComplete: 'on',\n  onChange: () => {},\n  onBlur: () => {},\n  onFocus: () => {}\n};","map":{"version":3,"sources":["/home/skyparci/work/project/your-kname/src/components/TextField/index.js"],"names":["React","memo","useReducer","PropTypes","TextFieldWrap","TextFieldContainer","TextFieldLabel","TextFieldLabelSpan","TextFieldInput","SVG","TextFieldError","compareProperties","UPDATE_INPUT_VALUE","reducer","state","type","value","inputValue","TextField","title","name","placeholder","disabled","autoComplete","onChange","onBlur","onFocus","required","error","dispatch","handleChange","e","persist","target","preventDefault","handleBlur","prevProps","nextProps","prototype","string","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { memo, useReducer, } from 'react';\nimport PropTypes from 'prop-types';\n// styles\nimport {\n    TextFieldWrap,\n    TextFieldContainer,\n    TextFieldLabel,\n    TextFieldLabelSpan,\n    TextFieldInput,\n    SVG,\n    TextFieldError,\n} from './styles';\nimport compareProperties from 'utils/compareProperties';\n// constants\nconst UPDATE_INPUT_VALUE = 'UPDATE_INPUT_VALUE';\n\nfunction reducer(state, { type, value }) {\n    switch (type) {\n        case UPDATE_INPUT_VALUE:\n            return { ...state, inputValue: value, };\n        default:\n            return state;\n    }\n}\n\nconst TextField = memo(\n    ({\n        title,\n        name,\n        type,\n        placeholder,\n        disabled,\n        autoComplete,\n        onChange,\n        onBlur,\n        onFocus,\n        required,\n        error,\n    }) => {\n        const [state, dispatch] = useReducer(reducer, {\n            inputValue: '',\n        });\n\n        const handleChange = e => {\n            e.persist();\n            const { value } = e.target;\n            dispatch({ type: UPDATE_INPUT_VALUE, value });\n            e.preventDefault();\n            onChange(e);\n        };\n\n        const handleBlur = e => {\n            onBlur(e);\n        };\n\n        return (\n            <TextFieldWrap>\n                <TextFieldContainer>\n                    <TextFieldInput\n                        id={name}\n                        name={name}\n                        type={type}\n                        placeholder={placeholder}\n                        disabled={disabled}\n                        required={required}\n                        autoComplete={autoComplete}\n                        value={state.inputValue}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        onFocus={onFocus}\n                    />\n                    <TextFieldLabel value={state.inputValue}>\n                        <TextFieldLabelSpan>{title || name}</TextFieldLabelSpan>\n                    </TextFieldLabel>\n                    <SVG width=\"300%\" value={state.inputValue} height=\"100%\" viewBox=\"0 0 1200 60\" preserveAspectRatio=\"none\">\n                        <path d=\"M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0\"/>\n                    </SVG>\n                </TextFieldContainer>\n                \n                {error && <TextFieldError>{error}</TextFieldError>}\n            </TextFieldWrap>\n        );\n    },\n    (prevProps, nextProps) => compareProperties()([\n        'error', 'disabled'\n    ])\n);\n\nexport default TextField;\n\nTextField.prototype = {\n    name: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    error: PropTypes.string,\n    type: PropTypes.string,\n    placeholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    required: PropTypes.bool,\n    autoComplete: PropTypes.string,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n};\n\nTextField.defaultProps = {\n    title: '',\n    error: '',\n    type: 'text',\n    placeholder: '',\n    disabled: false,\n    required: false,\n    autoComplete: 'on',\n    onChange: () => {},\n    onBlur: () => {},\n    onFocus: () => {},\n};\n"]},"metadata":{},"sourceType":"module"}