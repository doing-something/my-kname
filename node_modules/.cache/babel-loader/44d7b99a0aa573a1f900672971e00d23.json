{"ast":null,"code":"var _jsxFileName = \"/home/skyparci/work/project/your-kname/src/components/OverlayMenu/index.js\";\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Times } from 'styled-icons/fa-solid'; // styles\n\nimport { OverlayWrap, ListWrap, List, Item, CloseButton, ItemButton } from './styles';\nconst OverlayMenu = memo(({\n  isVisible,\n  onClose,\n  onSelect,\n  options\n}) => {\n  const handleSelect = i => {\n    return () => {\n      onSelect(i);\n      onClose();\n    };\n  };\n\n  if (options.length < 1) return null;\n  if (!options[0].label || !options[0].value) return null;\n  return React.createElement(OverlayWrap, {\n    isVisible: isVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(CloseButton, {\n    type: \"button\",\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Times, {\n    size: \"80\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(ListWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, options.map((item, i) => React.createElement(Item, {\n    key: \"option-\".concat(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ItemButton, {\n    type: \"button\",\n    onClick: handleSelect(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, item.label))))));\n}, (prevProps, nextProps) => prevProps.isVisible === nextProps.isVisible);\nOverlayMenu.propTypes = {\n  isVisible: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSelect: PropTypes.func,\n  options: PropTypes.array\n};\nOverlayMenu.defaultProps = {\n  isVisible: false,\n  onClose: () => {},\n  onSelect: () => {},\n  options: []\n};\nexport default OverlayMenu;","map":{"version":3,"sources":["/home/skyparci/work/project/your-kname/src/components/OverlayMenu/index.js"],"names":["React","memo","PropTypes","Times","OverlayWrap","ListWrap","List","Item","CloseButton","ItemButton","OverlayMenu","isVisible","onClose","onSelect","options","handleSelect","i","length","label","value","map","item","prevProps","nextProps","propTypes","bool","func","array","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,uBAAtB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,IAAtC,EAA4CC,WAA5C,EAAyDC,UAAzD,QAA2E,UAA3E;AAEA,MAAMC,WAAW,GAAGT,IAAI,CAAC,CAAC;AACtBU,EAAAA,SADsB;AAEtBC,EAAAA,OAFsB;AAGtBC,EAAAA,QAHsB;AAItBC,EAAAA;AAJsB,CAAD,KAKnB;AACF,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,WAAO,MAAM;AACTH,MAAAA,QAAQ,CAACG,CAAD,CAAR;AACAJ,MAAAA,OAAO;AACV,KAHD;AAIH,GALD;;AAOA,MAAIE,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB,OAAO,IAAP;AACxB,MAAI,CAACH,OAAO,CAAC,CAAD,CAAP,CAAWI,KAAZ,IAAqB,CAACJ,OAAO,CAAC,CAAD,CAAP,CAAWK,KAArC,EAA4C,OAAO,IAAP;AAE5C,SACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAER,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,OAAO,CAACM,GAAR,CAAY,CAACC,IAAD,EAAOL,CAAP,KACT,oBAAC,IAAD;AAAM,IAAA,GAAG,mBAAYA,CAAZ,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAED,YAAY,CAACC,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDK,IAAI,CAACH,KAA1D,CADJ,CADH,CADL,CADJ,CAJJ,CADJ;AAgBH,CAhCuB,EAgCrB,CAACI,SAAD,EAAYC,SAAZ,KAA0BD,SAAS,CAACX,SAAV,KAAwBY,SAAS,CAACZ,SAhCvC,CAAxB;AAkCAD,WAAW,CAACc,SAAZ,GAAwB;AACpBb,EAAAA,SAAS,EAAET,SAAS,CAACuB,IADD;AAEpBb,EAAAA,OAAO,EAAEV,SAAS,CAACwB,IAFC;AAGpBb,EAAAA,QAAQ,EAAEX,SAAS,CAACwB,IAHA;AAIpBZ,EAAAA,OAAO,EAAEZ,SAAS,CAACyB;AAJC,CAAxB;AAOAjB,WAAW,CAACkB,YAAZ,GAA2B;AACvBjB,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAFM;AAGvBC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAHK;AAIvBC,EAAAA,OAAO,EAAE;AAJc,CAA3B;AAOA,eAAeJ,WAAf","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Times } from 'styled-icons/fa-solid';\n// styles\nimport { OverlayWrap, ListWrap, List, Item, CloseButton, ItemButton } from './styles';\n\nconst OverlayMenu = memo(({\n    isVisible,\n    onClose,\n    onSelect,\n    options\n}) => {\n    const handleSelect = (i) => {\n        return () => {\n            onSelect(i);\n            onClose();\n        };\n    };\n   \n    if (options.length < 1) return null;\n    if (!options[0].label || !options[0].value) return null;\n\n    return (\n        <OverlayWrap isVisible={isVisible}>\n            <CloseButton type=\"button\" onClick={onClose}>\n                <Times size=\"80\" />\n            </CloseButton>\n            <ListWrap>\n                <List>\n                    {options.map((item, i) => (\n                        <Item key={`option-${i}`}>\n                            <ItemButton type=\"button\" onClick={handleSelect(i)}>{item.label}</ItemButton>\n                        </Item>\n                    ))}\n                </List>\n            </ListWrap>\n        </OverlayWrap>\n    );\n}, (prevProps, nextProps) => prevProps.isVisible === nextProps.isVisible);\n\nOverlayMenu.propTypes = {\n    isVisible: PropTypes.bool,\n    onClose: PropTypes.func,\n    onSelect: PropTypes.func,\n    options: PropTypes.array,\n};\n\nOverlayMenu.defaultProps = {\n    isVisible: false,\n    onClose: () => {},\n    onSelect: () => {},\n    options: []\n};\n\nexport default OverlayMenu;\n"]},"metadata":{},"sourceType":"module"}