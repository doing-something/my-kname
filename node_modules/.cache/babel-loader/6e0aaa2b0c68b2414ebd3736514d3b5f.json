{"ast":null,"code":"import _slicedToArray from \"/home/skyparci/work/project/your-kname/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/skyparci/work/project/your-kname/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/skyparci/work/project/your-kname/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useReducer, useCallback } from 'react';\nimport { Normalize } from 'styled-normalize';\nimport FontPicker from 'font-picker-react';\nimport html2canvas from 'html2canvas';\nimport GlobalStyles from 'styles/GlobalStyles';\nimport { Wrap, Form, SubmitButton, FormWrap, SelectLanguageButton, Result, PreviewUtils, EditButton, PreviewButton, SizeButtons, SizeButton, SizeButtonLabel, FontSelector, SaveButton } from 'styles'; // components\n\nimport TextField from 'components/TextField';\nimport OverlayMenu from 'components/OverlayMenu';\nimport { Pen, Plus, Minus } from 'styled-icons/fa-solid';\nimport { Eye, Save } from 'styled-icons/fa-regular'; // hooks\n\nimport useValidation, { isRequired, lengthBetween } from 'hooks/useValidation'; // constants\n\nconst SET_RESULT = 'SET_RESULT';\nconst SELECT_LANGUAGE = 'SELECT_LANGUAGE';\nconst EDIT_MODE = 'EDIT_MODE';\nconst PREVIEW_MODE = 'PREVIEW_MODE';\nconst UPDATE_FONT_SIZE = 'UPDATE_FONT_SIZE';\nconst UPDATE_FONT_FAMILY = 'UPDATE_FONT_FAMILY';\nconst TOGGLE_LANGUAGE_OPTIONS = 'TOGGLE_LANGUAGE_OPTIONS';\nconst FONT_INDEX = 10;\nconst fontFamilies = ['Noto Sans KR', 'Nanum Myeongjo', 'Gothic A1', 'Sunflower', 'Nanum Pen Script', 'Nanum Gothic Coding', 'Nanum Brush Script', 'Black Han Sans', 'Do Hyeon', 'Single Day', 'Noto Serif KR', 'Jua', 'Gugi', 'Gaegu', 'Dokdo', 'Song Myung', 'Poor Story', 'Stylish', 'Kirang Haerang', 'East Sea Dokdo', 'Black And White Picture', 'Gamja Flower', 'Cute Font', 'Yeon Sung', 'Hi Melody'];\n\nfunction reducer(state, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case SET_RESULT:\n      return _objectSpread({}, state, {\n        result: decodeURIComponent(payload),\n        isSubmitted: true,\n        isPreview: true\n      });\n\n    case SELECT_LANGUAGE:\n      return _objectSpread({}, state, {\n        langIndex: payload\n      });\n\n    case EDIT_MODE:\n      return _objectSpread({}, state, {\n        isPreview: false\n      });\n\n    case PREVIEW_MODE:\n      return _objectSpread({}, state, {\n        isPreview: true\n      });\n\n    case UPDATE_FONT_SIZE:\n      return _objectSpread({}, state, {\n        fontIndex: state.fontIndex + payload\n      });\n\n    case UPDATE_FONT_FAMILY:\n      return _objectSpread({}, state, {\n        activeFontFamily: payload\n      });\n\n    case TOGGLE_LANGUAGE_OPTIONS:\n      return _objectSpread({}, state, {\n        isLanguageOptionVisible: payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst configs = {\n  fields: {\n    yourname: {\n      rules: [[isRequired, 'Please fill out your name.'], [lengthBetween(2, 35), 'The text length must be between 2 and 35.']]\n    }\n  },\n  showErrors: 'blur'\n};\nconst langs = [{\n  label: 'English',\n  value: 'en'\n}, {\n  label: 'Japanese',\n  value: 'jp'\n}, {\n  label: 'Chinese',\n  value: 'cn'\n}, {\n  label: 'Vietnamese',\n  value: 'vi'\n}, {\n  label: 'Indonesian',\n  value: 'id'\n}, {\n  label: 'Arabic',\n  value: 'ar'\n}, {\n  label: 'Bengali',\n  value: 'bn'\n}, {\n  label: 'German',\n  value: 'de'\n}, {\n  label: 'Spanish',\n  value: 'es'\n}, {\n  label: 'French',\n  value: 'fr'\n}, {\n  label: 'Hindi',\n  value: 'hi'\n}, {\n  label: 'Italian',\n  value: 'it'\n}, {\n  label: 'Malaysian',\n  value: 'ms'\n}, {\n  label: 'Dutch',\n  value: 'nl'\n}, {\n  label: 'Portuguese',\n  value: 'pt'\n}, {\n  label: 'Russian',\n  value: 'ru'\n}, {\n  label: 'Thai',\n  value: 'th'\n}, {\n  label: 'Turkish',\n  value: 'tr'\n}];\n\nfunction App() {\n  const _useReducer = useReducer(reducer, {\n    result: '',\n    langIndex: -1,\n    isLanguageOptionVisible: false,\n    isSubmitted: false,\n    isPreview: false,\n    fontIndex: 0,\n    activeFontFamily: 'Roboto'\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const result = state.result,\n        langIndex = state.langIndex,\n        isLanguageOptionVisible = state.isLanguageOptionVisible,\n        isSubmitted = state.isSubmitted,\n        isPreview = state.isPreview,\n        fontIndex = state.fontIndex,\n        activeFontFamily = state.activeFontFamily;\n  const submitButtonRef = useRef();\n  const resultRef = useRef();\n  const submitForm = useCallback(({\n    values,\n    isFormValid\n  }) => {\n    const srcLang = langs[langIndex].value;\n    const query = values['yourname'];\n    if (!isFormValid) return;\n    const headers = {\n      'Content-Type': 'application/json;charset=utf-8'\n    };\n    submitButtonRef.current && submitButtonRef.current.focus();\n    return fetch(\"http://localhost:4000/kname\", {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        query: encodeURIComponent(query),\n        srcLang\n      })\n    }).then(res => {\n      return res.json();\n    }).then(resJson => {\n      dispatch({\n        type: SET_RESULT,\n        payload: resJson.translated_text[0][0]\n      });\n    }).catch(err => console.log(err));\n  }, [langIndex]);\n\n  const _useValidation = useValidation(configs, submitForm),\n        getFieldProps = _useValidation.getFieldProps,\n        handleSubmit = _useValidation.handleSubmit;\n\n  const toggleOverlay = () => {\n    dispatch({\n      type: TOGGLE_LANGUAGE_OPTIONS,\n      payload: !isLanguageOptionVisible\n    });\n  };\n\n  const handleSelectLang = index => {\n    dispatch({\n      type: SELECT_LANGUAGE,\n      payload: index\n    });\n  };\n\n  const handlePreviewMode = () => {\n    dispatch({\n      type: PREVIEW_MODE\n    });\n  };\n\n  const selectEditMode = () => {\n    dispatch({\n      type: EDIT_MODE\n    });\n  };\n\n  const increaseFont = () => {\n    const size = fontIndex > 80 ? 0 : FONT_INDEX;\n    dispatch({\n      type: UPDATE_FONT_SIZE,\n      payload: size\n    });\n  };\n\n  const decreaseFont = () => {\n    const size = fontIndex < 20 ? 0 : -FONT_INDEX;\n    dispatch({\n      type: UPDATE_FONT_SIZE,\n      payload: size\n    });\n  };\n\n  const updateFontFamily = fontFamily => {\n    dispatch({\n      type: UPDATE_FONT_FAMILY,\n      payload: fontFamily.family\n    });\n  };\n\n  const handleSaveImage = () => {\n    // resultRef\n    resultRef.current && html2canvas(resultRef.current).then(canvas => {\n      saveImage(canvas.toDataURL(), '');\n    });\n  };\n\n  function saveImage(uri, filename) {\n    const link = document.createElement('a');\n\n    if (typeof link.download === 'string') {\n      link.href = uri;\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(uri);\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Normalize, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(GlobalStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }), React.createElement(Wrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(FormWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, !isPreview && React.createElement(Form, {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(SelectLanguageButton, {\n    type: \"button\",\n    onClick: toggleOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, langIndex > -1 ? langs[langIndex].label : 'Select your language.'), result && React.createElement(PreviewButton, {\n    type: \"button\",\n    onClick: handlePreviewMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Eye, {\n    size: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  })), langIndex > -1 && React.createElement(\"div\", {\n    style: {\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(TextField, Object.assign({\n    title: \"Your name\",\n    autoComplete: \"off\"\n  }, getFieldProps('yourname'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  })), React.createElement(SubmitButton, {\n    type: \"submit\",\n    ref: submitButtonRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"subit\"))), isPreview && React.createElement(PreviewUtils, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(EditButton, {\n    type: \"button\",\n    onClick: selectEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(Pen, {\n    size: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  })), React.createElement(SizeButtons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(SizeButtonLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"size\"), React.createElement(SizeButton, {\n    type: \"button\",\n    onClick: increaseFont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(Plus, {\n    size: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  })), React.createElement(SizeButton, {\n    type: \"button\",\n    onClick: decreaseFont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(Minus, {\n    size: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }))), React.createElement(FontSelector, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(FontPicker, {\n    apiKey: \"AIzaSyBLabzHormO2-pOS4Fu2WTaJz_vt5GpmU8\",\n    activeFontFamily: activeFontFamily,\n    onChange: updateFontFamily,\n    families: fontFamilies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }))), React.createElement(OverlayMenu, {\n    isVisible: isLanguageOptionVisible,\n    onClose: toggleOverlay,\n    options: langs,\n    onSelect: handleSelectLang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }), result && React.createElement(SaveButton, {\n    type: \"button\",\n    onClick: handleSaveImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(Save, {\n    size: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  })), isSubmitted && result && React.createElement(Result, {\n    className: \"apply-font\",\n    fontIndex: fontIndex,\n    ref: resultRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, result), isSubmitted && !result && React.createElement(Result, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, \"No Result.\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/skyparci/work/project/your-kname/src/App.js"],"names":["React","useRef","useReducer","useCallback","Normalize","FontPicker","html2canvas","GlobalStyles","Wrap","Form","SubmitButton","FormWrap","SelectLanguageButton","Result","PreviewUtils","EditButton","PreviewButton","SizeButtons","SizeButton","SizeButtonLabel","FontSelector","SaveButton","TextField","OverlayMenu","Pen","Plus","Minus","Eye","Save","useValidation","isRequired","lengthBetween","SET_RESULT","SELECT_LANGUAGE","EDIT_MODE","PREVIEW_MODE","UPDATE_FONT_SIZE","UPDATE_FONT_FAMILY","TOGGLE_LANGUAGE_OPTIONS","FONT_INDEX","fontFamilies","reducer","state","type","payload","result","decodeURIComponent","isSubmitted","isPreview","langIndex","fontIndex","activeFontFamily","isLanguageOptionVisible","configs","fields","yourname","rules","showErrors","langs","label","value","App","dispatch","submitButtonRef","resultRef","submitForm","values","isFormValid","srcLang","query","headers","current","focus","fetch","method","body","JSON","stringify","encodeURIComponent","then","res","json","resJson","translated_text","catch","err","console","log","getFieldProps","handleSubmit","toggleOverlay","handleSelectLang","index","handlePreviewMode","selectEditMode","increaseFont","size","decreaseFont","updateFontFamily","fontFamily","family","handleSaveImage","canvas","saveImage","toDataURL","uri","filename","link","document","createElement","download","href","appendChild","click","removeChild","window","open","marginTop"],"mappings":"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","sourcesContent":["import React, { useRef, useReducer, useCallback } from 'react';\nimport { Normalize } from 'styled-normalize';\nimport FontPicker from 'font-picker-react';\nimport html2canvas from 'html2canvas';\nimport GlobalStyles from 'styles/GlobalStyles';\nimport { \n    Wrap, \n    Form, \n    SubmitButton, \n    FormWrap, \n    SelectLanguageButton, \n    Result,\n    PreviewUtils,\n    EditButton,\n    PreviewButton,\n    SizeButtons,\n    SizeButton,\n    SizeButtonLabel,\n    FontSelector,\n    SaveButton\n} from 'styles';\n// components\nimport TextField from 'components/TextField';\nimport OverlayMenu from 'components/OverlayMenu';\nimport { Pen, Plus, Minus } from 'styled-icons/fa-solid';\nimport { Eye, Save } from 'styled-icons/fa-regular';\n// hooks\nimport useValidation, { isRequired, lengthBetween } from 'hooks/useValidation';\n// constants\nconst SET_RESULT = 'SET_RESULT';\nconst SELECT_LANGUAGE = 'SELECT_LANGUAGE';\nconst EDIT_MODE = 'EDIT_MODE';\nconst PREVIEW_MODE = 'PREVIEW_MODE';\nconst UPDATE_FONT_SIZE = 'UPDATE_FONT_SIZE';\nconst UPDATE_FONT_FAMILY = 'UPDATE_FONT_FAMILY';\nconst TOGGLE_LANGUAGE_OPTIONS = 'TOGGLE_LANGUAGE_OPTIONS';\nconst FONT_INDEX = 10;\nconst fontFamilies = [\n    'Noto Sans KR',\n    'Nanum Myeongjo',\n    'Gothic A1',\n    'Sunflower',\n    'Nanum Pen Script',\n    'Nanum Gothic Coding',\n    'Nanum Brush Script',\n    'Black Han Sans',\n    'Do Hyeon',\n    'Single Day',\n    'Noto Serif KR',\n    'Jua',\n    'Gugi',\n    'Gaegu',\n    'Dokdo',\n    'Song Myung',\n    'Poor Story',\n    'Stylish',\n    'Kirang Haerang',\n    'East Sea Dokdo',\n    'Black And White Picture',\n    'Gamja Flower',\n    'Cute Font',\n    'Yeon Sung',\n    'Hi Melody'\n];\n\nfunction reducer(state, { type, payload }) {\n    switch (type) {\n        case SET_RESULT:\n            return { \n                ...state, \n                result: decodeURIComponent(payload), \n                isSubmitted: true,\n                isPreview: true,\n        };\n        case SELECT_LANGUAGE:\n            return { ...state, langIndex: payload };\n        case EDIT_MODE:\n            return { ...state, isPreview: false };\n        case PREVIEW_MODE:\n            return { ...state, isPreview: true };\n        case UPDATE_FONT_SIZE:\n            return { ...state, fontIndex: state.fontIndex + payload };\n        case UPDATE_FONT_FAMILY:\n            return { ...state, activeFontFamily: payload };\n        case TOGGLE_LANGUAGE_OPTIONS:\n            return { ...state, isLanguageOptionVisible: payload };\n        default:\n            return state;\n    }\n}\n\nconst configs = {\n    fields: {\n        yourname: {\n            rules: [\n                [isRequired, 'Please fill out your name.'],\n                [lengthBetween(2, 35), 'The text length must be between 2 and 35.'],\n            ],\n        }\n    },\n    showErrors: 'blur',\n};\n\nconst langs = [\n    {label: 'English', value: 'en'},\n    {label: 'Japanese', value: 'jp'},\n    {label: 'Chinese', value: 'cn'},\n    {label: 'Vietnamese', value: 'vi'},\n    {label: 'Indonesian', value: 'id'},\n    {label: 'Arabic', value: 'ar'},\n    {label: 'Bengali', value: 'bn'},\n    {label: 'German', value: 'de'},\n    {label: 'Spanish', value: 'es'},\n    {label: 'French', value: 'fr'},\n    {label: 'Hindi', value: 'hi'},\n    {label: 'Italian', value: 'it'},\n    {label: 'Malaysian', value: 'ms'},\n    {label: 'Dutch', value: 'nl'},\n    {label: 'Portuguese', value: 'pt'},\n    {label: 'Russian', value: 'ru'},\n    {label: 'Thai', value: 'th'},\n    {label: 'Turkish', value: 'tr'},\n];\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, {\n        result: '',\n        langIndex: -1,\n        isLanguageOptionVisible: false,\n        isSubmitted: false,\n        isPreview: false,\n        fontIndex: 0,\n        activeFontFamily: 'Roboto'\n    });\n\n    const { \n        result, \n        langIndex, \n        isLanguageOptionVisible, \n        isSubmitted, \n        isPreview,\n        fontIndex,\n        activeFontFamily\n    } = state;\n    const submitButtonRef = useRef();\n    const resultRef = useRef();\n    \n    const submitForm = useCallback(({ values, isFormValid }) => {\n        const srcLang = langs[langIndex].value;\n        const query = values['yourname'];\n        if (!isFormValid) return;\n        \n        const headers = {\n            'Content-Type': 'application/json;charset=utf-8',\n        };\n        submitButtonRef.current && submitButtonRef.current.focus();\n        return fetch(`http://localhost:4000/kname`, {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify({\n                    query: encodeURIComponent(query),\n                    srcLang\n                }),\n            }).then((res) => {\n                return res.json();\n            }).then(resJson => {\n                dispatch({ type: SET_RESULT, payload: resJson.translated_text[0][0] });\n            }).catch(err => console.log(err));\n    }, [langIndex]);\n\n    const { getFieldProps, handleSubmit } = useValidation(\n        configs,\n        submitForm,\n    );\n\n    const toggleOverlay = () => {\n        dispatch({ type: TOGGLE_LANGUAGE_OPTIONS, payload: !isLanguageOptionVisible });\n    };\n\n    const handleSelectLang = (index) => {\n        dispatch({ type: SELECT_LANGUAGE, payload: index });\n    };\n\n    const handlePreviewMode = () => {\n        dispatch({ type: PREVIEW_MODE });\n    };\n\n    const selectEditMode = () => {\n        dispatch({ type: EDIT_MODE });\n    };\n\n    const increaseFont = () => {\n        const size = fontIndex > 80 ? 0 : FONT_INDEX;\n        dispatch({ type: UPDATE_FONT_SIZE, payload: size });\n    };\n\n    const decreaseFont = () => {\n        const size = fontIndex < 20 ? 0 : -FONT_INDEX;\n        dispatch({ type: UPDATE_FONT_SIZE, payload: size });\n    };\n\n    const updateFontFamily = (fontFamily) => {\n        dispatch({ type: UPDATE_FONT_FAMILY, payload: fontFamily.family });\n    };\n\n    const handleSaveImage = () => {\n        // resultRef\n        resultRef.current && html2canvas(resultRef.current)\n            .then((canvas) => {\n\n                saveImage(canvas.toDataURL(), '');\n            });\n    };\n\n    function saveImage(uri, filename) {\n        const link = document.createElement('a');\n        if (typeof link.download === 'string') {\n            link.href = uri;\n            link.download = filename;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        } else {\n            window.open(uri);\n        }\n    }\n\n    return (\n        <>\n            <Normalize />\n            <GlobalStyles />\n            <Wrap>\n                <FormWrap>\n                    {!isPreview && (\n                        <Form onSubmit={handleSubmit} noValidate>\n                            <SelectLanguageButton type=\"button\" onClick={toggleOverlay}>\n                                {langIndex > -1 ? langs[langIndex].label : 'Select your language.'}\n                            </SelectLanguageButton>\n                            {result && (\n                                <PreviewButton \n                                    type=\"button\" \n                                    onClick={handlePreviewMode}\n                                >\n                                    <Eye size=\"20\" />\n                                </PreviewButton>\n                            )}\n                            {langIndex > -1 && (\n                                <div style={{ marginTop: 30 }}>\n                                    <TextField\n                                        title=\"Your name\"\n                                        autoComplete=\"off\"\n                                        {...getFieldProps('yourname')}\n                                    />\n                                    <SubmitButton type=\"submit\" ref={submitButtonRef}>subit</SubmitButton>\n                                </div>\n                            )}\n                        </Form>\n                    )}\n                    {isPreview && (\n                        <PreviewUtils>\n                            <EditButton type=\"button\" onClick={selectEditMode}>\n                                <Pen size=\"20\" />\n                            </EditButton>\n                            <SizeButtons>\n                                <SizeButtonLabel>size</SizeButtonLabel>\n                                <SizeButton type=\"button\" onClick={increaseFont}>\n                                    <Plus size=\"20\" />\n                                </SizeButton>\n                                <SizeButton type=\"button\" onClick={decreaseFont}>\n                                    <Minus size=\"20\" />\n                                </SizeButton>\n                            </SizeButtons>\n                            \n                            <FontSelector>\n                                <FontPicker\n                                    apiKey=\"AIzaSyBLabzHormO2-pOS4Fu2WTaJz_vt5GpmU8\"\n                                    activeFontFamily={activeFontFamily}\n                                    onChange={updateFontFamily}\n                                    families={fontFamilies}\n                                />\n                            </FontSelector>\n                        </PreviewUtils>\n                    )}\n                    \n                    <OverlayMenu\n                        isVisible={isLanguageOptionVisible}\n                        onClose={toggleOverlay}\n                        options={langs}\n                        onSelect={handleSelectLang}\n                    />\n                    {result && (\n                        <SaveButton type=\"button\" onClick={handleSaveImage}>\n                            <Save size=\"20\" />\n                        </SaveButton>\n                    )}\n                    {isSubmitted && result && (\n                        <Result \n                            className=\"apply-font\" \n                            fontIndex={fontIndex}\n                            ref={resultRef}\n                        >{result}</Result>\n                    )}\n                    {isSubmitted && !result && (\n                        <Result>No Result.</Result>\n                    )}\n                </FormWrap>\n            </Wrap>\n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}